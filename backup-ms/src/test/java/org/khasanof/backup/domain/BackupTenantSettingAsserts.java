package org.khasanof.backup.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BackupTenantSettingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupTenantSettingAllPropertiesEquals(BackupTenantSetting expected, BackupTenantSetting actual) {
        assertBackupTenantSettingAutoGeneratedPropertiesEquals(expected, actual);
        assertBackupTenantSettingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupTenantSettingAllUpdatablePropertiesEquals(BackupTenantSetting expected, BackupTenantSetting actual) {
        assertBackupTenantSettingUpdatableFieldsEquals(expected, actual);
        assertBackupTenantSettingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupTenantSettingAutoGeneratedPropertiesEquals(BackupTenantSetting expected, BackupTenantSetting actual) {
        assertThat(expected)
            .as("Verify BackupTenantSetting auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupTenantSettingUpdatableFieldsEquals(BackupTenantSetting expected, BackupTenantSetting actual) {
        assertThat(expected)
            .as("Verify BackupTenantSetting relevant properties")
            .satisfies(e -> assertThat(e.getTimeUnit()).as("check timeUnit").isEqualTo(actual.getTimeUnit()))
            .satisfies(e -> assertThat(e.getDuration()).as("check duration").isEqualTo(actual.getDuration()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupTenantSettingUpdatableRelationshipsEquals(BackupTenantSetting expected, BackupTenantSetting actual) {}
}
