package org.khasanof.backup.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BackupFileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupFileAllPropertiesEquals(BackupFile expected, BackupFile actual) {
        assertBackupFileAutoGeneratedPropertiesEquals(expected, actual);
        assertBackupFileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupFileAllUpdatablePropertiesEquals(BackupFile expected, BackupFile actual) {
        assertBackupFileUpdatableFieldsEquals(expected, actual);
        assertBackupFileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupFileAutoGeneratedPropertiesEquals(BackupFile expected, BackupFile actual) {
        assertThat(expected)
            .as("Verify BackupFile auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupFileUpdatableFieldsEquals(BackupFile expected, BackupFile actual) {
        assertThat(expected)
            .as("Verify BackupFile relevant properties")
            .satisfies(e -> assertThat(e.getFilePath()).as("check filePath").isEqualTo(actual.getFilePath()))
            .satisfies(e -> assertThat(e.getFileSize()).as("check fileSize").isEqualTo(actual.getFileSize()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBackupFileUpdatableRelationshipsEquals(BackupFile expected, BackupFile actual) {
        assertThat(expected)
            .as("Verify BackupFile relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
